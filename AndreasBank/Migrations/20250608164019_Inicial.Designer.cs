// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using AndreasBank.Models;

#nullable disable

namespace AndreasBank.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20250608164019_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Agencia", b =>
                {
                    b.Property<string>("Numero")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Numero");

                    b.ToTable("Agencia");
                });

            modelBuilder.Entity("Cliente", b =>
                {
                    b.Property<string>("Cpf")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Cpf");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Conta", b =>
                {
                    b.Property<string>("Numero")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgenciaNumero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CnpjTitular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CpfTitular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataUltimoAcesso")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailTitular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EnderecoTitular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusConta")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TelefoneTitular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoConta")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Numero");

                    b.HasIndex("AgenciaNumero");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("Conta", b =>
                {
                    b.HasOne("Agencia", "Agencia")
                        .WithMany()
                        .HasForeignKey("AgenciaNumero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agencia");
                });
#pragma warning restore 612, 618
        }
    }
}
