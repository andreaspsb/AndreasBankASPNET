// <auto-generated />
using System;
using AndreasBank.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AndreasBank.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20250608181936_HerancaConta")]
    partial class HerancaConta
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("AndreasBank.Models.Agencia", b =>
                {
                    b.Property<string>("Numero")
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Numero");

                    b.ToTable("Agencias", (string)null);
                });

            modelBuilder.Entity("AndreasBank.Models.Cliente", b =>
                {
                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("CPF");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("AndreasBank.Models.Conta", b =>
                {
                    b.Property<string>("Numero")
                        .HasMaxLength(6)
                        .HasColumnType("TEXT");

                    b.Property<string>("AgenciaNumero")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataUltimoAcesso")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusConta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoConta")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TitularCPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.HasKey("Numero");

                    b.HasIndex("AgenciaNumero");

                    b.HasIndex("TitularCPF");

                    b.ToTable("Contas", (string)null);

                    b.HasDiscriminator<int>("TipoConta");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AndreasBank.Models.ContaCorrente", b =>
                {
                    b.HasBaseType("AndreasBank.Models.Conta");

                    b.Property<decimal>("LimiteChequeEspecial")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("AndreasBank.Models.ContaPoupanca", b =>
                {
                    b.HasBaseType("AndreasBank.Models.Conta");

                    b.Property<decimal>("TaxaRendimento")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("AndreasBank.Models.ContaSalario", b =>
                {
                    b.HasBaseType("AndreasBank.Models.Conta");

                    b.Property<string>("CnpjEmpregador")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AndreasBank.Models.Conta", b =>
                {
                    b.HasOne("AndreasBank.Models.Agencia", "Agencia")
                        .WithMany("Contas")
                        .HasForeignKey("AgenciaNumero")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AndreasBank.Models.Cliente", "Titular")
                        .WithMany("Contas")
                        .HasForeignKey("TitularCPF")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agencia");

                    b.Navigation("Titular");
                });

            modelBuilder.Entity("AndreasBank.Models.Agencia", b =>
                {
                    b.Navigation("Contas");
                });

            modelBuilder.Entity("AndreasBank.Models.Cliente", b =>
                {
                    b.Navigation("Contas");
                });
#pragma warning restore 612, 618
        }
    }
}
